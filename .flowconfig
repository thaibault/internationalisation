# NOTE: Uses OCaml regular expressions.
[ignore]
.*/\.git
.*/_.*\.js
.*/.+\.compiled\(\.js\)?
# Ignore all webOptimizer modules except "browserAPI" and "type".
\(.*/\)?node_modules/weboptimizer/\(\([^tb].*\)\|\(t[^y].*\)\|\(ty[^p].*\)\|\(typ[^e].*\)\|\(type.+\)\|\(..?.?\)\|\(......?.?.?.?\)\|\(brow\)\|\(b[^r].*\)\|\(br[^o].*\)\|\(bro[^w].*\)\|\(brow[^s].*\)\|\(brows[^e].*\)\|\(browse[^r].*\)\|\(browser[^A].*\)\|\(browserA[^P].*\)\|\(browserAP[^I].*\)\|\(browserAPI.+\)\)\.js

# temporary excludes
.*/documentation-website/.*
.+/systemjs-builder/test/fixtures/sourcemaps-expectations/.+\.json
.*/website-utilities/.*

[options]
unsafe.enable_getters_and_setters=true

module.name_mapper='^\./ejsLoader.compiled$' -> 'ejs'
module.name_mapper='^script!qunitjs$' -> 'qunitjs'
module.name_mapper='^weboptimizer/browserAPI.compiled$' -> 'weboptimizer/browserAPI'

module.file_ext=.js
module.file_ext=.compiled.js
module.file_ext=.json
module.file_ext=.compiled.json
module.file_ext=.jsx
module.file_ext=.compiled.jsx

suppress_comment=[ \\n]*IgnoreTypeCheck
traces=1
